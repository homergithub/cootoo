<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper  
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="unitLocationModule">  
	
	<cache eviction="FIFO" flushInterval="60000" size="1024" readOnly="true"/>

	<!-- 添加建筑信息 -->
   	<insert id="insertUnitLocation" parameterType="list">
		insert into ${db_conn}.tUnitLocation(locationID,
										     unitName,
											 parentNode,
											 unitType,
											 unitSize,
											 sex,
											 orgID)values
		<foreach collection="list" item="item" separator=",">
			(#{item.locationID},#{item.unitName},#{item.parentNode},#{item.unitType},#{item.unitSize},#{item.sex},#{item.orgID})
		</foreach>							      
	</insert>
	
	<!-- 删除建筑信息(List对象中存locationID字符串) -->
	<delete id="deleteUnitLocation" parameterType="list">
		delete from ${db_conn}.tUnitLocation where locationID in 
		(
			<foreach collection="list" item="item" separator=",">
				#{item}
			</foreach>
		)
	</delete>
	
	<!-- 修改建筑信息 -->
	<update id="updateUnitLocation" parameterType="com.cootoo.metamanagement.domain.UnitLocation">
		update ${db_conn}.tUnitLocation set unitName=#{unitName},
											unitType=#{unitType},
											unitSize = #{unitSize},
											sex = #{sex}
		where locationID = #{locationID}
	</update>
	
	
	<!-- 根据登陆ID获取管理的校区信息，校管理员可以查看多条记录，宿管只能看到一条记录 -->
	<select id="selectSchoolAreaByLoginID" parameterType="int" resultType="hashmap">
		select e.locationID, 
		e.unitName,
		e.unitType,
		e.unitSize,
		e.sex
		from ${db_conn}.tUnitLocation e
		inner join 
		(select distinct(parentNode)
		from ${db_conn}.tRoleToLocation a
		inner join ${db_conn}.tUnitLocation b on a.locationID = b.locationID 
		inner join ${db_conn}.tLogin c on a.roleID = c.roleID
		where c.loginID = #{loginID}
		) d on e.locationID = d.parentNode
	</select>
	
	<!-- 根据登录ID获取管理的楼栋信息，校管理员可以查看多条记录，宿管只能看到一条记录 -->
	<select id="selectBuildingByLoginID" parameterType="int" resultType="hashmap">
		select c.locationID,
		c.unitName,
		c.unitType,
		c.unitSize,
		c.sex
		from ${db_conn}.tLogin a
		inner join ${db_conn}.tRoleToLocation b on a.roleID = b.roleID
		inner join ${db_conn}.tUnitLocation c on b.locationID = c.locationID
		where a.loginID = #{loginID}
	</select>
	
	<!-- 通过楼栋得到该栋所有层或者房间 -->
	<select id="selectFloorOrRoomByLocationID" parameterType="string" resultType="hashmap">
		select locationID,
		unitName,
		unitType,
		unitSize,
		sex
		from tUnitLocation where parentNode = #{locationID}
	</select>
	
	<!-- 验证excel中数据的顺序 -->
	<select id="selectTreePathByOrgID" parameterType="string" resultType="int">
		select count(*) FROM ${db_conn}.tUnitLocation 
		where orgID = #{orgID}
		and treePath is null;
	</select>
	
	
	
	
	
	
	
	
	
	
	
</mapper>